import os

current_directory = os.path.dirname(os.path.abspath(__file__))

os.chdir(current_directory)
os.chdir("..")

def embed_shader_source(name: str, shader_filename: str) -> str:
    with open(f"TriEngine/src/Shaders/{shader_filename}", 'r') as f:
        return f"constexpr const char* {name} = R\"({f.read()})\";"

shaders_source = f"""// Generated by Scripts/embed_shaders.py

#pragma once

namespace TriEngine {{
namespace ShaderSource {{

{embed_shader_source("basicFrag", "basicfrag.glsl")}
{embed_shader_source("basicVert", "basicvert.glsl")}
{embed_shader_source("particleFrag", "particle_fs.glsl")}
{embed_shader_source("particleVert", "particle_vs.glsl")}
{embed_shader_source("particleSpawner", "particleSpawner_cs.glsl")}
{embed_shader_source("particleUpdate", "particleUpdate_cs.glsl")}
{embed_shader_source("screenFrag", "screenfrag.glsl")}
{embed_shader_source("screenVert", "screenvert.glsl")}
}} }}
"""

with open("TriEngine/src/Core/Renderer/ShaderSource.h", 'w') as f:
    f.write(shaders_source)
